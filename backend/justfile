# Backend Task Runner (TrakRF Platform)
# Uses fallback to inherit shared recipes from root justfile
set fallback := true

# List all available recipes
default:
    @just --list

# Start Go development server (local mode: backend on host → postgres in docker)
dev:
    @echo "🚀 Backend on host → postgres in docker (localhost:5432)"
    @if [ -z "$$PG_URL_LOCAL" ]; then \
        echo "⚠️  PG_URL_LOCAL not set - using PG_URL"; \
        go run .; \
    else \
        PG_URL="$$PG_URL_LOCAL" go run .; \
    fi

# Cloud development (backend on host → postgres in cloud)
dev-cloud:
    @echo "☁️  Backend on host → cloud postgres"
    @if [ -z "$$PG_URL_CLOUD" ]; then \
        echo "❌ PG_URL_CLOUD not set in .env.local"; \
        exit 1; \
    fi
    PG_URL="$$PG_URL_CLOUD" go run .

# Alias for consistency
run: dev

# Lint Go code (formatting + static analysis)
lint:
    go fmt ./...
    go vet ./...

# Run backend tests with verbose output
test:
    go test -v ./...

# Run tests with race detection
test-race:
    go test -race ./...

# Run tests with coverage report
test-coverage:
    go test -cover ./...

# Build backend binary with version injection
build:
    go build -ldflags "-X main.version=0.1.0-dev" -o bin/trakrf .

# Generate Swagger API documentation
swagger:
    @echo "📚 Generating Swagger documentation..."
    swag init -g main.go --parseDependency --parseInternal
    @echo "✅ Swagger docs generated at docs/"
    @echo "📖 View at: http://localhost:8080/swagger/index.html"

# Smoke test - verifies binary starts without panic (uses PG_URL_LOCAL for host → docker)
smoke-test:
    #!/usr/bin/env bash
    set -euo pipefail
    echo "🔥 Running smoke test..."
    just build
    echo "Starting server with 5s timeout..."
    if [ -n "${PG_URL_LOCAL:-}" ]; then
    export PG_URL="$PG_URL_LOCAL"
    fi
    timeout 5s ./bin/trakrf > /tmp/trakrf-smoke.log 2>&1 & SERVER_PID=$!
    sleep 2
    echo "Testing /healthz endpoint..."
    if curl -f http://localhost:8080/healthz > /dev/null 2>&1; then
    echo "✅ Smoke test passed"
    kill $SERVER_PID 2>/dev/null || true
    else
    echo "❌ Smoke test failed"
    cat /tmp/trakrf-smoke.log
    kill $SERVER_PID 2>/dev/null || true
    exit 1
    fi

# Run all backend validation checks
validate: lint test build smoke-test

# Shell access
shell:
    docker compose exec backend sh
