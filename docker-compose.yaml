volumes:
  timescale_data:
  go_mod_cache:

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      target: development
      network: host
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      BACKEND_PORT: ${BACKEND_PORT:-8080}
      BACKEND_LOG_LEVEL: ${BACKEND_LOG_LEVEL:-info}
      PG_URL: ${PG_URL}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600}
    volumes:
      - ./backend:/app
      - ./database/migrations:/app/database/migrations
      - ./database/seeds:/app/database/seeds
      - go_mod_cache:/go/pkg/mod
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped

  ingester:
    build:
      context: ./ingester
      dockerfile: Dockerfile
    container_name: ingester
    volumes:
      - ./ingester/connect.yaml:/connect.yaml
    ports:
      - "4195:4195"
    environment:
      MQTT_TOPIC: ${MQTT_TOPIC}
      MQTT_URL: ${MQTT_URL}
      MQTT_CLIENT_ID: ${MQTT_CLIENT_ID:-trakrf-platform-ingester}
      PG_URL: ${PG_URL}
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped
