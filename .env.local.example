# =============================================================================
# ⚠️  SECURITY: This is a TEMPLATE - Replace all placeholder values
# Copy actual credentials from ../trakrf-web/.env.local
# NEVER commit .env.local to git (it's in .gitignore)
# =============================================================================

# -----------------------------------------------------------------------------
# Backend: Database (local docker)
# -----------------------------------------------------------------------------
# Password for PostgreSQL superuser (used by timescaledb service)
DATABASE_PASSWORD=your_secure_password_here

# Database name (default: postgres)
DATABASE_NAME=postgres

# PostgreSQL connection URL (used by backend service)
# Format: postgresql://user:password@host:port/database?options
# Note: Password must be URL-encoded (# → %23, ! → %21, ^ → %5E)
# This is auto-constructed in docker-compose.yaml, but you can override it here
PG_URL=postgresql://postgres:your_url_encoded_password@timescaledb:5432/postgres?sslmode=disable&options=-c%20search_path%3Dtrakrf,public

# -----------------------------------------------------------------------------
# Backend: MQTT (EMQX Cloud - copy from ../trakrf-web/.env.local)
# -----------------------------------------------------------------------------
# MQTT protocol (mqtts for TLS)
MQTT_PROTO=mqtts

# EMQX Cloud hostname
MQTT_HOST=your-emqx-cloud-host.emqxsl.com

# EMQX Cloud port (8883 for TLS)
MQTT_PORT=8883

# MQTT username
MQTT_USER=your_mqtt_username

# MQTT password
MQTT_PASS=your_mqtt_password

# MQTT topic filter (# = wildcard)
MQTT_TOPIC=your_topic/#

# Full MQTT connection URL (used by Redpanda Connect ingester)
# Note: Password must be URL-encoded
MQTT_URL=mqtts://your_user:your_url_encoded_pass@your-host.emqxsl.com:8883

# MQTT client ID (unique identifier for this connection)
MQTT_CLIENT_ID=trakrf-platform-local

# -----------------------------------------------------------------------------
# Backend: Cloud DB (optional - for production cloud connection)
# -----------------------------------------------------------------------------
# Timescale Cloud connection URL (copy from ../trakrf-web/.env.local if using)
CLOUD_PG_URL=postgres://user:password@your-cloud-host.tsdb.cloud.timescale.com:12345/tsdb?sslmode=require&options=-c%20search_path%3Dtrakrf,public

# -----------------------------------------------------------------------------
# Backend Service
# -----------------------------------------------------------------------------
# HTTP server port
PORT=8080

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# Frontend: VITE_* vars (exposed to browser)
# -----------------------------------------------------------------------------
# Backend API endpoint
VITE_API_URL=http://localhost:8080/api

# Application name
VITE_APP_NAME="TrakRF Platform"

# Log level (debug, info, warn, error)
VITE_LOG_LEVEL=debug

# Enable BLE mock mode (true = no hardware needed)
VITE_BLE_MOCK_ENABLED=true

# Default antenna power (dBm)
VITE_DEFAULT_ANTENNA_POWER=25

# Default inventory session (0-3)
VITE_DEFAULT_INVENTORY_SESSION=1

# BLE command timeout (milliseconds)
VITE_BLE_COMMAND_TIMEOUT=10000

# -----------------------------------------------------------------------------
# Frontend: BLE Bridge (E2E tests - adjust to your bridge server IP)
# -----------------------------------------------------------------------------
# IP address of BLE MCP bridge server
BLE_MCP_HOST=192.168.x.x

# WebSocket port
BLE_MCP_WS_PORT=8080

# HTTP port
BLE_MCP_HTTP_PORT=8081

# Authentication token for bridge HTTP API
BLE_MCP_HTTP_TOKEN=your_bridge_token
